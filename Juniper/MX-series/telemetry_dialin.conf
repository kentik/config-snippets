/* Create a local user for gnmi-user per Juniper docs
(https://www.juniper.net/documentation/us/en/software/junos/grpc-network-services/topics/topic-map/grpc-services-configuring.html#task-configure-gnoi-user-account)
*/

/* The allow-commands-regexps and deny-commands-regexps statements were introduced in Junos OS Release 18.1
ssl statement introduced in Junos OS Release 16.1
mutual-authentication, client-certificate-request, and certificate-authority options added in Junos OS Release 17.4R1
hot-reloading option added in Junos OS Release 20.4R1
use-pki option added in Junos OS Evolved Release 22.2R1
*/

system {
    login {
        class {
            grpc-operator {
                permissions view;
                allow-grpc-rpc-regexps "/gnmi.gNMI/Get";
                deny-grpc-rpc-regexps “.*”;
            }
        }
        user gnmi-user {
            class grpc-operator;
        }
    }
}

/* This method is insecure and should only be used in a lab. */
system {
    services {
        extension-service {
            request-response {
                grpc {
                    clear-text {
                        address {{local_address}};
                        port 443;
                    }
                }
            }
            notification {
                allow-clients {
                    address {{kentik_agent_IP}};
                }
            }
        }
    }
    schema {
        openconfig {
            unhide;
        }
    }
}

/* This method uses SSL with a self-signed cerficate for production environments.
Upload an x509 certificate to the router or create a self-signed certificate. For example, on any Linux machine:
$ openssl req -x509 -sha256 -nodes -newkey rsa:2048 -keyout grpc-cert.key -out grpc-cert.pem

You can also generate a self-signed certificate directly from the JUNOS CLI:
Generate keypair: > request security pki generate-key-pair size 2048 type rsa certificate-id grpc-cert
Generate certificate: > request security pki local-certificate generate-self-signed certificate-id grpc-cert domain-name <FQDN> email <Email> subject CN=<FQDN>,OU=<Organizational-Unit-name>,O=<Organization-name>,L=<Locality>,ST=<state>,C=<Country>
*/
set security certificates local grpc-cert load-key-file grpc-cert.pem

system {
    services {
        extension-service {
            request-response {
                grpc {
                    ssl {
                        address {{local_address}};
                        port 443;
                        use-pki;
                        hot-reloading;
                        local-certificate grpc-cert
                    }
                }
            }
            notification {
                allow-clients {
                    address {{kentik_agent_IP}};
                }
            }
        }
    }
    schema {
        openconfig {
            unhide;
        }
    }
}
